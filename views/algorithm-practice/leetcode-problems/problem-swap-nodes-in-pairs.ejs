<p></p>
<p> Given a linked list, swap every two adjacent nodes and return its
    head.
</p>
<p> For example,<br> Given <code>1-&gt;2-&gt;3-&gt;4</code>, you
    should return the list as
    <code>2-&gt;1-&gt;4-&gt;3</code>.
</p>
<p> Your algorithm should use only
    constant space. You may <b>not</b> modify the values in the list, only nodes
    itself
    can be changed.
</p>
<p></p>
<div>
    <p><a href = "/subscribe/">Subscribe</a> to see which companies asked this
        question
    </p>
</div>
<div>
    <div id = "tags" class = "btn btn-xs btn-warning">
        Show Tags
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/tag/linked-list/">Linked
            List</a> </span>
</div>
<div>
    <div id = "similar" class = "btn btn-xs btn-warning">
        Show Similar Problems
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/problems/reverse-nodes-in-k-group/">
            (H) Reverse
            Nodes in k-Group</a> </span>
</div>