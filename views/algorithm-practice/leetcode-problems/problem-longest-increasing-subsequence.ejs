<p></p>
<p> Given an unsorted array of integers, find the length of longest
    increasing subsequence.
</p>
<p> For example,<br> Given <code>[10, 9, 2, 5, 3, 7, 101, 18]</code>,<br>
    The longest increasing subsequence is <code>[2,
        3, 7, 101]</code>, therefore the length is <code>4</code>. Note that
    there may be more than one LIS combination,
    it is only necessary for you to return the length.
</p>
<p> Your algorithm
    should run in O(<i>n<sup>2</sup></i>) complexity.
</p>
<p><b>Follow up:</b>
    Could you improve it to O(<i>n</i> log <i>n</i>) time complexity?
</p>
<p><b>Credits:</b><br>Special
    thanks to
    <a href = "https://leetcode.com/discuss/user/pbrother">@pbrother</a> for
    adding
    this problem and creating all test cases.
</p>
<p></p>
<div>
    <p><a href = "/subscribe/">Subscribe</a> to see which companies asked this
        question
    </p>
</div>
<div>
    <div id = "tags" class = "btn btn-xs btn-warning">
        Show Tags
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/tag/dynamic-programming/">Dynamic
            Programming</a>
        <a class = "btn btn-xs btn-primary" href = "/tag/binary-search/">Binary
            Search</a> </span>
</div>
<div>
    <div id = "similar" class = "btn btn-xs btn-warning">
        Show Similar Problems
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/problems/increasing-triplet-subsequence/">
            (M)
            Increasing Triplet Subsequence</a> </span>
</div>