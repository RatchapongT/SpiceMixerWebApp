<p></p>
<p>Implement an iterator over a binary search tree (BST). Your iterator
    will be initialized with the root node of a
    BST.
</p>
<p>Calling <code>next()</code> will return the next smallest number
    in the BST.
</p>
<p><b>Note: </b><code>next()</code> and
    <code>hasNext()</code> should run in average O(1) time and uses O(<i>h</i>)
    memory, where <i>h</i> is the height of the tree.
</p>
<p><b>Credits:</b><br>Special
    thanks to <a href = "https://oj.leetcode.com/discuss/user/ts">@ts</a> for
    adding this
    problem and creating all test cases.
</p>
<p></p>
<div>
    <p><a href = "/subscribe/">Subscribe</a> to see which companies asked this
        question
    </p>
</div>
<div>
    <div id = "tags" class = "btn btn-xs btn-warning">
        Show Tags
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/tag/tree/">Tree</a> <a class = "btn btn-xs btn-primary" href = "/tag/stack/">Stack</a> <a class = "btn btn-xs btn-primary" href = "/tag/design/">Design</a> </span>
</div>
<div>
    <div id = "similar" class = "btn btn-xs btn-warning">
        Show Similar Problems
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/problems/binary-tree-inorder-traversal/">
            (M)
            Binary Tree Inorder
            Traversal</a> <a class = "btn btn-xs btn-primary" href = "/problems/flatten-2d-vector/">
            (M)
            Flatten 2D
            Vector</a> <a class = "btn btn-xs btn-primary" href = "/problems/zigzag-iterator/">
            (M) Zigzag
            Iterator</a> <a class = "btn btn-xs btn-primary" href = "/problems/peeking-iterator/">
            (M) Peeking Iterator</a>
        <a class = "btn btn-xs btn-primary" href = "/problems/inorder-successor-in-bst/">
            (M) Inorder Successor in BST</a>
    </span>
</div>