<p></p>
<p> Given a binary tree, determine if it is a valid binary search tree
    (BST).
</p>
<p> Assume a BST is defined as follows:</p>
<ul>
    <li>The left subtree of a node contains only nodes with keys <b>less
            than</b> the node's key.
    </li>
    <li>The right subtree of a node contains only nodes with keys <b>greater
            than</b> the node's key.
    </li>
    <li>Both the left and right subtrees must also be binary search trees.</li>
</ul>
<p></p>
<p class = "showspoilers">confused what <code>"{1,#,2,3}"</code>
    means? <a href = "#" onclick = "showSpoilers(this); return false;">
        &gt; read more on how binary tree is serialized on OJ.</a></p>
<div class = "spoilers">
    <br>
    <b>OJ's Binary Tree Serialization:</b>

    <p> The serialization of a binary tree follows a level order traversal,
        where '#' signifies a path terminator where
        no node exists below.
    </p>

    <p> Here's an example:<br></p>
    <pre>
        1
        / \
        2 3
        /
        4
        \
        5
    </pre>
    The above binary tree is serialized as
    <code>"{1,2,3,#,#,4,#,#,5}"</code>.
    <p></p>
</div>
<p></p>
<div>
    <p><a href = "/subscribe/">Subscribe</a> to see which companies asked this
        question
    </p>
</div>
<div>
    <div id = "tags" class = "btn btn-xs btn-warning">
        Show Tags
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/tag/tree/">Tree</a> <a class = "btn btn-xs btn-primary" href = "/tag/depth-first-search/">Depth-first
            Search</a> </span>
</div>
<div>
    <div id = "similar" class = "btn btn-xs btn-warning">
        Show Similar Problems
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/problems/binary-tree-inorder-traversal/">
            (M)
            Binary Tree Inorder Traversal</a> </span>
</div>