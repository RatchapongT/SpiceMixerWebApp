<p></p>
<p>Given a singly linked list, group all odd nodes together followed by
    the even nodes. Please note here we are talking
    about the node number and not the value in the nodes.
</p>
<p>You should try
    to do it in place. The program should run in O(1) space complexity and
    O(nodes) time complexity.
</p>
<p></p>
<p><b>Example:</b><br> Given
    <code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code>,<br>
    return <code>1-&gt;3-&gt;5-&gt;2-&gt;4-&gt;NULL</code>.
</p>
<p>
    <b>Note:</b><br> The relative order inside both the even and odd groups
    should remain as it was in the input. <br>
    The first node is considered odd, the second node even and so on ...
</p>
<p>
    <b>Credits:</b><br>Special thanks to
    <a href = "https://leetcode.com/discuss/user/DjangoUnchained">@DjangoUnchained</a>
    for adding this problem and creating all test cases.
</p>
<p></p>
<div>
    <p><a href = "/subscribe/">Subscribe</a> to see which companies asked this
        question
    </p>
</div>
<div>
    <div id = "tags" class = "btn btn-xs btn-warning">
        Show Tags
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/tag/linked-list/">Linked
            List</a> </span>
</div>