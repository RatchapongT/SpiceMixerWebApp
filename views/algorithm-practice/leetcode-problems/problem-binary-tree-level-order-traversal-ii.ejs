<p></p>
<p>Given a binary tree, return the <i>bottom-up level order</i> traversal
    of its nodes' values. (ie, from left to right,
    level by level from leaf to root).
</p>
<p> For example:<br> Given binary tree
    <code>{3,9,20,#,#,15,7}</code>,<br></p>
<pre>
    3
    / \
    9 20
    / \
    15 7
</pre>
<p></p>
<p> return its bottom-up level order traversal as:<br></p>
<pre>
    [
    [15,7],
    [9,20],
    [3]
    ]
</pre>
<p></p>
<p class = "showspoilers">confused what <code>"{1,#,2,3}"</code>
    means? <a href = "#" onclick = "showSpoilers(this); return false;">
        &gt; read more on how binary tree is serialized on OJ.</a></p>
<div class = "spoilers">
    <br>
    <b>OJ's Binary Tree Serialization:</b>

    <p> The serialization of a binary tree follows a level order traversal,
        where '#' signifies a path terminator where
        no node exists below.
    </p>

    <p> Here's an example:<br></p>
    <pre>
        1
        / \
        2 3
        /
        4
        \
        5
    </pre>
    The above binary tree is serialized as
    <code>"{1,2,3,#,#,4,#,#,5}"</code>.
    <p></p>
</div>
<p></p>
<div>
    <p><a href = "/subscribe/">Subscribe</a> to see which companies asked this
        question
    </p>
</div>
<div>
    <div id = "tags" class = "btn btn-xs btn-warning">
        Show Tags
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/tag/tree/">Tree</a> <a class = "btn btn-xs btn-primary" href = "/tag/breadth-first-search/">Breadth-first
            Search</a> </span>
</div>
<div>
    <div id = "similar" class = "btn btn-xs btn-warning">
        Show Similar Problems
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/problems/binary-tree-level-order-traversal/">
            (E)
            Binary Tree Level Order Traversal</a> </span>
</div>