<p></p>
<p> Given a string S and a string T, find the minimum window in S which
    will contain all the characters in T in
    complexity O(n).
</p>
<p> For example,<br> <b>S</b> =
    <code>"ADOBECODEBANC"</code><br> <b>T</b> = <code>"ABC"</code><br></p>
<p>
    Minimum window is <code>"BANC"</code>.
</p>
<p><b>Note:</b><br> If there is
    no such window in S that covers all characters in T, return the empty string
    <code>""</code>.
</p>
<p> If there are multiple such windows, you are
    guaranteed that there will always be only one unique minimum window in
    S.
</p>
<p></p>
<div>
    <p><a href = "/subscribe/">Subscribe</a> to see which companies asked this
        question
    </p>
</div>
<div>
    <div id = "tags" class = "btn btn-xs btn-warning">
        Show Tags
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/tag/hash-table/">Hash
            Table</a> <a class = "btn btn-xs btn-primary" href = "/tag/two-pointers/">Two
            Pointers</a> <a class = "btn btn-xs btn-primary" href = "/tag/string/">String</a> </span>
</div>
<div>
    <div id = "similar" class = "btn btn-xs btn-warning">
        Show Similar Problems
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/problems/substring-with-concatenation-of-all-words/">
            (H) Substring with
            Concatenation of All
            Words</a> <a class = "btn btn-xs btn-primary" href = "/problems/minimum-size-subarray-sum/">
            (M) Minimum Size Subarray
            Sum</a> <a class = "btn btn-xs btn-primary" href = "/problems/sliding-window-maximum/">
            (H) Sliding Window
            Maximum</a> </span>
</div>