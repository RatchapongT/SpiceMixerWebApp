<p></p>
<p>Given a binary tree, return the <i>inorder</i> traversal of its nodes'
    values.
</p>
<p> For example:<br> Given binary tree
    <code>{1,#,2,3}</code>,<br></p>
<pre>
    1
    \
    2
    /
    3
</pre>
<p></p>
<p> return <code>[1,3,2]</code>.</p>
<p><b>Note:</b> Recursive
    solution is trivial, could you do it iteratively?
</p>
<p class = "showspoilers">confused what <code>"{1,#,2,3}"</code> means?
    <a href = "#" onclick = "showSpoilers(this); return false;">
        &gt; read more on how binary tree is serialized on OJ.</a></p>
<div class = "spoilers">
    <br>
    <b>OJ's Binary Tree Serialization:</b>

    <p> The serialization of a binary tree follows a level order traversal,
        where '#' signifies a path terminator where
        no node exists below.
    </p>

    <p> Here's an example:<br></p>
    <pre>
        1
        / \
        2 3
        /
        4
        \
        5
    </pre>
    The above binary tree is serialized as
    <code>"{1,2,3,#,#,4,#,#,5}"</code>.
    <p></p>
</div>
<p></p>
<div>
    <p><a href = "/subscribe/">Subscribe</a> to see which companies asked this
        question
    </p>
</div>
<div>
    <div id = "tags" class = "btn btn-xs btn-warning">
        Show Tags
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/tag/tree/">Tree</a> <a class = "btn btn-xs btn-primary" href = "/tag/hash-table/">Hash
            Table</a> <a class = "btn btn-xs btn-primary" href = "/tag/stack/">Stack</a>
    </span>
</div>
<div>
    <div id = "similar" class = "btn btn-xs btn-warning">
        Show Similar Problems
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/problems/validate-binary-search-tree/">
            (M)
            Validate Binary Search
            Tree</a> <a class = "btn btn-xs btn-primary" href = "/problems/binary-tree-preorder-traversal/">
            (M) Binary Tree
            Preorder
            Traversal</a> <a class = "btn btn-xs btn-primary" href = "/problems/binary-tree-postorder-traversal/">
            (H) Binary Tree Postorder
            Traversal</a> <a class = "btn btn-xs btn-primary" href = "/problems/binary-search-tree-iterator/">
            (M) Binary Search
            Tree
            Iterator</a> <a class = "btn btn-xs btn-primary" href = "/problems/kth-smallest-element-in-a-bst/">
            (M) Kth
            Smallest Element in a
            BST</a> <a class = "btn btn-xs btn-primary" href = "/problems/closest-binary-search-tree-value-ii/">
            (H) Closest Binary
            Search Tree Value
            II</a> <a class = "btn btn-xs btn-primary" href = "/problems/inorder-successor-in-bst/">
            (M)
            Inorder Successor in BST</a> </span>
</div>