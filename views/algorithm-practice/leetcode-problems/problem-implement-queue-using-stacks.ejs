<p></p>
<p> Implement the following operations of a queue using stacks.</p>
<ul>
    <li> push(x) -- Push element x to the back of queue.</li>
    <li> pop() -- Removes the element from in front of queue.</li>
    <li> peek() -- Get the front element.</li>
    <li> empty() -- Return whether the queue is empty.</li>
</ul><b>Notes:</b><br>
<ul>
    <li>You must use <i>only</i> standard operations of a stack -- which means
        only <code>push to top</code>, <code>peek/pop
            from top</code>, <code>size</code>, and <code>is empty</code>
        operations are valid.
    </li>
    <li>Depending on your language, stack may not be supported natively. You may
        simulate a stack by using a list or
        deque (double-ended queue), as long as you use only standard operations
        of a stack.
    </li>
    <li>You may assume that all operations are valid (for example, no pop or
        peek operations will be called on an empty
        queue).
    </li>
</ul>
<p></p>
<p></p>
<div>
    <p><a href = "/subscribe/">Subscribe</a> to see which companies asked this
        question
    </p>
</div>
<div>
    <div id = "tags" class = "btn btn-xs btn-warning">
        Show Tags
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/tag/stack/">Stack</a> <a class = "btn btn-xs btn-primary" href = "/tag/design/">Design</a> </span>
</div>
<div>
    <div id = "similar" class = "btn btn-xs btn-warning">
        Show Similar Problems
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/problems/implement-stack-using-queues/">
            (E)
            Implement Stack using Queues</a> </span>
</div>