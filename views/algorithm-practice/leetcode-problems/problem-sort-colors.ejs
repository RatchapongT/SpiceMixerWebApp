<p></p>
<p> Given an array with <i>n</i> objects colored red, white or blue, sort
    them so that objects of the same color are
    adjacent, with the colors in the order red, white and blue.
</p>
<p> Here, we
    will use the integers 0, 1, and 2 to represent the color red, white, and
    blue respectively.
</p>
<p><b>Note:</b><br> You are not suppose to use the
    library's sort function for this problem.
</p>
<p class = "showspoilers">
    <a href = "#" onclick = "showSpoilers(this); return false;">click to show
        follow up.</a></p>
<div class = "spoilers">
    <p><b>Follow up:</b><br> A rather straight forward solution is a two-pass
        algorithm using counting sort.<br> First,
        iterate the array counting number of 0's, 1's, and 2's, then overwrite
        array with total number of 0's, then 1's
        and followed by 2's.
    </p>

    <p>Could you come up with an one-pass algorithm using only constant
        space?<br></p>
</div>
<p></p>
<div>
    <p><a href = "/subscribe/">Subscribe</a> to see which companies asked this
        question
    </p>
</div>
<div>
    <div id = "tags" class = "btn btn-xs btn-warning">
        Show Tags
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/tag/array/">Array</a> <a class = "btn btn-xs btn-primary" href = "/tag/two-pointers/">Two
            Pointers</a> <a class = "btn btn-xs btn-primary" href = "/tag/sort/">Sort</a> </span>
</div>
<div>
    <div id = "similar" class = "btn btn-xs btn-warning">
        Show Similar Problems
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/problems/sort-list/">
            (M) Sort
            List</a> <a class = "btn btn-xs btn-primary" href = "/problems/wiggle-sort/">
            (M) Wiggle
            Sort</a> <a class = "btn btn-xs btn-primary" href = "/problems/wiggle-sort-ii/">
            (M) Wiggle Sort II</a> </span>
</div>