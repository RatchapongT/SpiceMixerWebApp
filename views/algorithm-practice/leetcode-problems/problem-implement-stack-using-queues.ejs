<p></p>
<p> Implement the following operations of a stack using queues.</p>
<ul>
    <li> push(x) -- Push element x onto stack.</li>
    <li> pop() -- Removes the element on top of the stack.</li>
    <li> top() -- Get the top element.</li>
    <li> empty() -- Return whether the stack is empty.</li>
</ul><b>Notes:</b><br>
<ul>
    <li>You must use <i>only</i> standard operations of a queue -- which means
        only <code>push to back</code>, <code>peek/pop
            from front</code>, <code>size</code>, and <code>is empty</code>
        operations are valid.
    </li>
    <li>Depending on your language, queue may not be supported natively. You may
        simulate a queue by using a list or
        deque (double-ended queue), as long as you use only standard operations
        of a queue.
    </li>
    <li>You may assume that all operations are valid (for example, no pop or top
        operations will be called on an empty
        stack).
    </li>
</ul>
<p></p>
<p><b><font color = "red">Update (2015-06-11):</font></b><br> The
    class name of the <b>Java</b> function had been updated
    to <b>MyStack</b> instead of Stack.
</p>
<p><b>Credits:</b><br>Special thanks
    to <a href = "https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a>
    for adding this problem and all test cases.
</p>
<p></p>
<div>
    <p><a href = "/subscribe/">Subscribe</a> to see which companies asked this
        question
    </p>
</div>
<div>
    <div id = "tags" class = "btn btn-xs btn-warning">
        Show Tags
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/tag/stack/">Stack</a> <a class = "btn btn-xs btn-primary" href = "/tag/design/">Design</a> </span>
</div>
<div>
    <div id = "similar" class = "btn btn-xs btn-warning">
        Show Similar Problems
    </div>
    <span class = "hidebutton"> <a class = "btn btn-xs btn-primary" href = "/problems/implement-queue-using-stacks/">
            (E)
            Implement Queue using Stacks</a> </span>
</div>